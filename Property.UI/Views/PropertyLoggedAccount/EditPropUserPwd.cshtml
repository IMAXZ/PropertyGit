@model Property.UI.Models.AccountPasswordChangeModel
@{
    ViewBag.Title = "修改个人密码";
}
<div class="row wrapper border-bottom white-bg page-heading">
    @Html.Partial("~/Views/Shared/_BreadCrumb.cshtml", new ViewDataDictionary { { "HasBack", "true" } })
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>修改个人密码</h5>
                </div>
                <div class="ibox-content">

                    @using (Ajax.BeginForm("EditPropUserPwd", "PropertyLoggedAccount", "", new AjaxOptions { HttpMethod = "Post", OnSuccess = "OnSuccess", OnFailure = "OnFailure" }, new { id = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            @Html.HiddenFor(model => model.UserId)
                            <div class="form-group">
                                <label class="control-label col-md-3">用户名</label>
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @placeholder = "用户名", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">新密码<span class="text-danger"> *</span></label>
                                <div class="col-md-6">
                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = "新密码", @required = true })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">确认密码<span class="text-danger"> *</span></label>
                                <div class="col-md-6">
                                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", @placeholder = "确认密码", @required = true })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-3 col-md-9">
                                    <input type="submit" value="确定" class="btn btn-primary" />
                                    <a class="btn btn-white" href="/Property/Index">取消</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/plugins/sweetAlertStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/sweetAlert")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/plugins/validate")
    <script type="text/javascript" src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript">

        $(document).ready(function ()
        {
            $("#form").validate({
                rules: {
                    Password: {
                        required: true,
                        LetterAndNumber: true,
                        maxlength: 32,
                        minlength: 6
                    },
                    ConfirmPassword: {
                        required: true,
                        LetterAndNumber: true,
                        maxlength: 32,
                        minlength: 6,
                        equalTo: "#Password"
                    }
                },
                messages: {
                    Password: {
                        required: "请输入新密码",
                        maxlength: "长度不能超过32位",
                        minlength: "长度不能小于6位"
                    },
                    ConfirmPassword: {
                        required: "请输入确认密码",
                        maxlength: "长度不能超过32位",
                        minlength: "长度不能小于6位",
                        equalTo: "密码前后不一致"
                    }
                }
            });
        });

        function OnSuccess(data)
        {
            if (data.Code == "OK")
            {
                var userType = @Html.GetSessionModel().UserType;
                if (userType == 0){
                    window.location.href = "/Account/PropertyLogOff";
                }else if(userType == 1){
                    window.location.href = "/Account/PlatformLogOff";
                }
            }
            else
            {
                swal({
                    title: data.Msg,
                    type: "error",
                    text: ""
                });
            }
        }
        function OnFailure(err)
        {
            swal({
                title: "请求出现异常,修改失败",
                type: "error",
                text: ""
            });
        }
    </script>
}
