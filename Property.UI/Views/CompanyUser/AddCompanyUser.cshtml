@model Property.UI.Models.CompanyUserModel
@{
    ViewBag.Title = "新增物业总公司用户";
    Layout = "~/Views/Shared/_CompanyLayout.cshtml";
}
<div class="row wrapper border-bottom white-bg page-heading">
    @Html.Partial("~/Views/Shared/_BreadCrumb.cshtml", new ViewDataDictionary { { "HasBack", "true" } })
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>新增物业总公司用户</h5>
                </div>
                <div class="ibox-content">
                    @using (Ajax.BeginForm("AddCompanyUser", "CompanyUser", "", new AjaxOptions { HttpMethod = "Post", OnSuccess = "OnSuccess", OnFailure = "OnFailure" }, new { id = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            <input type="hidden" id="CompanyUserId" name="CompanyUserId" value="0" />
                            <div class="form-group">
                                <label class="control-label col-md-3">所属物业总公司</label>
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.CompanyName, new { @class = "form-control", @placeholder = "所属物业总公司", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">用户名<span class="text-danger"> *</span></label>
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @placeholder = "用户名", @required = true })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">姓名</label>
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.TrueName, new { @class = "form-control", @placeholder = "姓名" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">登录密码<span class="text-danger"> *</span></label>
                                <div class="col-md-6">
                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = "密码", @required = true })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">确认密码<span class="text-danger"> *</span></label>
                                <div class="col-md-6">
                                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", @placeholder = "确认密码", @required = true })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">电子邮箱<span class="text-danger"> *</span></label>
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "电子邮箱", @required = true })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">联系方式</label>
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Tel, new { @class = "form-control", @placeholder = "联系方式" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">手机号码</label>
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", @placeholder = "手机号码" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">人员描述</label>
                                <div class="col-md-6">
                                    @Html.TextAreaFor(model => model.Memo, new { @class = "form-control", @placeholder = "人员描述" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-3 col-md-9">
                                    <input type="submit" value="确定" class="btn btn-primary" />
                                    <a class="btn btn-white" href="/CompanyUser/UserList">取消</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>

            </div>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/plugins/sweetAlertStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/sweetAlert")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/plugins/validate")
    <script type="text/javascript" src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript" src="~/Scripts/validate/addCompanyUserValidate.js"></script>
    <script type="text/javascript">

        function OnSuccess(data) {
            if (data.Code == "OK") {
                window.location.href = "/CompanyUser/CompanyUserList";
            }
            else {
                swal({
                    title: data.Msg,
                    type: "error",
                    text: ""
                });
            }
        }
        function OnFailure(err) {
            swal({
                title: "请求出现异常,新增失败",
                type: "error",
                text: ""
            });
        }
    </script>
}
