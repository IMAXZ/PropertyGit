@model Property.UI.Models.BuildDoorAddModel
@{
    ViewBag.Title = "新增单元户";
}
<div class="row wrapper border-bottom white-bg page-heading">
    @Html.Partial("~/Views/Shared/_BreadCrumb.cshtml", new ViewDataDictionary { { "HasBack", "true" } })
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>新增单元户</h5>
                </div>
                <div class="ibox-content">
                    @using (Ajax.BeginForm("AddDoor", "BuildDoor", "", new AjaxOptions { HttpMethod = "Post", OnSuccess = "OnSuccess", OnFailure = "OnFailure" }, new { id = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            <input type="hidden" id="Id" name="Id" value="0" />
                            <div class="form-group">
                                <label class="control-label col-md-3">所属楼座<span class="text-danger"> *</span></label>
                                <div class="col-md-6">
                                    @Html.DropDownListFor(model => model.BuildId, Model.BuildList, "请选择楼座", new { @class = "form-control", @required = true })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">所属单元<span class="text-danger"> *</span></label>
                                <div class="col-md-6">
                                    @Html.DropDownListFor(model => model.UnitId, Model.UnitList, "请选择单元", new { @class = "form-control", @required = true })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">单元户名称<span class="text-danger"> *</span></label>
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.DoorName, new { @class = "form-control", @placeholder = "单元户名称", @required = true })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-3 col-md-9">
                                    <input type="submit" value="确定" class="btn btn-primary" />
                                    <a class="btn btn-white" href="/BuildDoor/DoorList">取消</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>

            </div>
        </div>
    </div>
</div>


@section Styles {
    @Styles.Render("~/plugins/sweetAlertStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/sweetAlert")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/plugins/validate")
    <script type="text/javascript" src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript">

        $("#form").validate({
            rules: {
                DoorName: {
                    required: true,
                    maxlength: 50,
                    //remote: {
                    //    type: "POST",
                    //    url: "/BuildDoor/RemoteCheckExist",
                    //    data: {
                    //        Id: function () { return $("#Id").val();},
                    //        UnitId: function () { return $("#UnitId").val(); },
                    //        DoorName: function () { return $("#DoorName").val(); },
                    //    },
                    //    //BuildId: function () { return $("#BuildId").val();}
                    //}
                },
                BuildId: {
                    required: true
                },
                UnitId: {
                    required: true
                }
            },
            messages: {
                DoorName: {
                    required: "请输入单元户名称",
                    maxlength: "长度不能超过50位",
                    //remote: "该单元名称已存在"
                },
                BuildId: {
                    required: "请选择所属楼座"
                },
                UnitId: {
                    required: "请选择所属单元"
                }
            }
        });

        function OnSuccess(data)
        {
            if (data.Code == "OK")
            {
                window.location.href = "/BuildDoor/DoorList?unitId=@Model.UnitId";
            }
            else
            {
                swal({
                    title: data.Msg,
                    type: "error",
                    text: ""
                });
            }
        }
        function OnFailure(err)
        {
            swal({
                title: "请求出现异常,新增失败",
                type: "error",
                text: ""
            });
        }

        //楼座下拉框发生变化
        $("#BuildId").change(function ()
        {
            var buildId = $("#BuildId").val();
            var reqUrl = "";
            if (buildId != "" && buildId != undefined)
            {
                reqUrl = "/BuildDoor/GetUnitList?buildId=" + buildId;
            } else
            {
                $('#UnitId').empty();
                $('#UnitId').append("<option value=\"\">请选择单元</option>");
                return;
            }

            $.ajax({
                type: "post",
                url: reqUrl,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data)
                {
                    $('#UnitId').empty();
                    $('#UnitId').append("<option value=\"\">请选择单元</option>");
                    $.each(data, function (index, entry)
                    {
                        $('#UnitId').append("<option value=\"" + entry["Value"] + "\">" + entry["Text"] + "</option>");
                    });
                    $('#UnitId').change();
                }, error: function (error)
                {
                    swal({
                        title: "选择单元列表加载失败",
                        type: "error",
                        text: ""
                    });
                }
            });
        })
    </script>
}
