@{
    ViewBag.Title = "业主缴费模板设置";
}
@using Webdiyer.WebControls.Mvc
@model Property.UI.Models.ExpenseSettingsModel

<div class="row wrapper border-bottom white-bg page-heading">
    @Html.Partial("~/Views/Shared/_BreadCrumb.cshtml", new ViewDataDictionary { { "HasBack", "false" } })
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox-content m-b-xs border-bottom">
        <div class="row">
            <div class="col-lg-12">
                @using (Html.BeginForm("ExpenseSettings", "PropertyExpenseTemplate", FormMethod.Get, new { @class = "form-horizontal", @id = "form" }))
                {
                    <div class="form-group">
                        <label class="control-label col-md-1">楼座</label>
                        <div class="col-md-2">
                            @Html.DropDownListFor(m => m.BuildId, Model.BuildList, "选择楼座", new { @class = "form-control" })
                        </div>
                        <label class="control-label col-md-1">单元</label>
                        <div class="col-md-2">
                            @Html.DropDownListFor(m => m.UnitId, Model.UnitList, new { @class = "form-control" })
                        </div>
                        <label class="control-label col-md-1">缴费类别</label>
                        <div class="col-md-2">
                            @Html.DropDownListFor(m => m.ExpenseClassId, Model.ExpenseClassList, new { @class = "form-control" })
                        </div>
                        <label class="control-label col-md-1">缴费名称</label>
                        <div class="col-md-2">
                            @Html.DropDownListFor(m => m.ExpenseTypeId, Model.ExpenseTypeList, new { @class = "form-control" })
                        </div>
                    </div>
                    if (Html.IsHasButton("/PropertyExpenseTemplate/ExpenseSettings"))
                    {
                        <div class="form-group">
                            <div class="col-md-12 text-right">
                                <button class="btn btn-md btn-primary" type="submit">设置单元户缴费</button>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
    @if (Model.HouseUserExpenseTemplateList.Count > 0)
    {
        <div class="ibox-content m-b-xs border-bottom">
            <div class="row">
                <div class="col-lg-12">
                    @using (Ajax.BeginForm("UpdateExpenseTemplate", "PropertyExpenseTemplate", "", new AjaxOptions { HttpMethod = "Post" }, new { id = "deatailForm" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.GetDoorExpenseVal)
                        @Html.HiddenFor(m => m.UpdateExpenseTypeId)
                        <div class="form-horizontal">
                            <div class="form-group">
                                <label class="control-label col-md-1">缴费周期</label>
                                <div class="col-md-2">
                                    @Html.DropDownListFor(m => m.ExpenseCircleId, Model.ExpenseCircleList, new { @class = "form-control" })
                                </div>
                                <label class="control-label col-md-1">推送日期</label>
                                <div class="input-daterange input-group" id="datepicker">
                                    @Html.TextBox("NotificationDate", Model.NotificationDate.Value.ToString("yyyy-MM-dd"), new { @class = "form-control col-md-2", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table table-striped table-bordered table-hover dataTable">
                                <thead>
                                    <tr>
                                        <th class="text-nowrap text-center col-md-6">单元户</th>
                                        <th class="text-nowrap text-center col-md-6">应缴费用</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @Html.HiddenFor(m => m.PropertyPlaceId)
                                    @{
                        int i = 0;
                                    }
                                    @foreach (var houseUserExpenseTemplate in Model.HouseUserExpenseTemplateList)
                                    {
                                        houseUserExpenseTemplate.index = i;
                                        @Html.Partial("~/Views/PropertyExpenseTemplate/_HouseUserExpenseTemplate.cshtml", houseUserExpenseTemplate)
                                        i += 1;
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="form-horizontal">
                            <div class="form-group">
                                <div class="col-md-12 text-center">
                                    <input value="提交" class="btn btn-primary" onclick="sub()" type="button" />
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>
@section Styles {
    @Styles.Render("~/plugins/sweetAlertStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/sweetAlert")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/plugins/validate")
    @Scripts.Render("~/plugins/dataPicker")

    <script type="text/javascript" src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#datepicker').datepicker({
                clearBtn: false
            });

            // 判断浮点数value是否大于等于0
            jQuery.validator.addMethod("isFloatEqZero", function (value, element) {
                value = parseFloat(value);
                return this.optional(element) || value >= 0;
            }, "浮点数必须大于等于0");

            inputValidate();
        });

        //提交
        function sub() {
            var txtAll = "";

            $("input[name^='Expense']").each(
            function () {
                var txt = "" + $(this).attr("data-rel") + "_" + $(this).val() + "";

                if (txtAll == "") {
                    txtAll = txt;
                }
                else {
                    txtAll = txtAll + "," + txt;
                }
            });

            $("#GetDoorExpenseVal").val(txtAll);
            $("#UpdateExpenseTypeId").val($("#ExpenseTypeId").val());

            if ($("#deatailForm").valid()) {
                $('#deatailForm').ajaxSubmit({
                    //beforeSend: OnBegin,
                    success: OnSuccess,
                    error: OnFailure
                });
            }
        }

        function OnSuccess(data) {
            if (data.Code == "OK") {
                swal({
                    title: "更新缴费模板成功",
                    type: "success",
                    text: ""
                });
            }
            else {
                swal({
                    title: data.Msg,
                    type: "error",
                    text: ""
                });
            }
        }

        function OnFailure(err) {
            swal({
                title: "请求出现异常,导入失败",
                type: "error",
                text: ""
            });
        }

        //验证
        $("#form").validate({
            errorPlacement: function (error, element) {
                if (element.parent().hasClass("input-group")) {
                    element.parent().after(error);
                }
                else
                    element.after(error)
            },
            rules: {
                BuildId: {
                    required: true
                },
                UnitId: {
                    required: true
                },
                ExpenseTypeId: {
                    required: true
                }
            },
            messages: {
                BuildId: {
                    required: "请选择楼座"
                },
                UnitId: {
                    required: "请选择单元"
                },
                ExpenseTypeId: {
                    required: "请选择缴费名称"
                }
            }
        });

        //验证
        function inputValidate() {
            $("#deatailForm").validate();

            $("input[name^='Expense']").each(
                 function () {
                     $(this).rules("add", { required: true, messages: { required: '请输入缴费用' } });
                     $(this).rules("add", { number: true, messages: { number: '请输入数字' } });
                     $(this).rules("add", { isFloatEqZero: true, messages: { isFloatEqZero: '费用不能是负数' } });
                 });
        };

        $("#ExpenseClassId").change(function () {
            AjaxGetExpenseTypes();
        });

        //绑定缴费种类列表
        function AjaxGetExpenseTypes() {
            var expenseClassId = $("#ExpenseClassId").val();
            if (expenseClassId != "" && expenseClassId != undefined) {
                reqUrl = "/PropertyExpenseTemplate/AjaxGetExpenseTypes?expenseClassId=" + expenseClassId;
            }
            $.ajax({
                type: "post",
                url: reqUrl,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $("#ExpenseTypeId").empty();
                    $(data).each(function () {
                        $('#ExpenseTypeId').append("<option value=\"" + this.Value + "\">" + this.Text + "</option>");
                    });
                    //$("#MatrixIds").trigger("change");
                }, error: function (error) {
                    swal({
                        title: "",
                        type: "warning",
                        text: "数据请求失败"
                    });
                }
            });
        }

        $("#BuildId").change(function () {
            AjaxGetUnits();
        })

        //绑定单元列表
        function AjaxGetUnits() {
            var buildId = $("#BuildId").val();
            if (buildId != "" && buildId != undefined) {
                reqUrl = "/PropertyExpenseTemplate/AjaxGetUnits?buildId=" + buildId;
            }
            $.ajax({
                type: "post",
                url: reqUrl,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $("#UnitId").empty();
                    $(data).each(function () {
                        $('#UnitId').append("<option value=\"" + this.Value + "\">" + this.Text + "</option>");
                    });
                    //$("#MatrixIds").trigger("change");
                }, error: function (error) {
                    swal({
                        title: "",
                        type: "warning",
                        text: "数据请求失败"
                    });
                }
            });
        }
    </script>
}
