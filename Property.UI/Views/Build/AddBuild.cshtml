@model Property.UI.Models.BuildSearchModel
@{
    ViewBag.Title = "新增楼座";
}
<div class="row wrapper border-bottom white-bg page-heading">
    @Html.Partial("~/Views/Shared/_BreadCrumb.cshtml", new ViewDataDictionary { { "HasBack", "true" } })
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>新增楼座</h5>
                </div>
                <div class="ibox-content">
                    @using (Ajax.BeginForm("AddBuild", "Build", "", new AjaxOptions { HttpMethod = "Post", OnSuccess = "OnSuccess", OnFailure = "OnFailure" }, new { id = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            <input type="hidden" id="Id" name="Id" value="0" />
                            @Html.HiddenFor(model => model.PropertyPlaceId)
                            <div class="form-group">
                                <label class="control-label col-md-3">所属小区</label>
                                <div class="col-md-6">
                                    <input type="text" name="PropertyPlace" value="@Html.GetPropertyPlaceName()" readonly class="form-control">
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">楼座名称<span class="text-danger"> *</span></label>
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.BuildName, new { @class = "form-control", @placeholder = "楼座名称", @required = true })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">描述</label>
                                <div class="col-md-6">
                                    @Html.TextAreaFor(model => model.Desc, new { @class = "form-control", @placeholder = "楼座描述" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-3 col-md-9">
                                    <input type="submit" value="确定" class="btn btn-primary" />
                                    <a class="btn btn-white" href="/Build/BuildList">取消</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>

            </div>
        </div>
    </div>
</div>


@section Styles {
    @Styles.Render("~/plugins/sweetAlertStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/sweetAlert")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/plugins/validate")
    <script type="text/javascript" src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript">

        $("#form").validate({
            rules: {
                BuildName: {
                    required: true,
                    maxlength: 50,
                    remote: {
                        type: "POST",
                        url: "/Build/RemoteCheckExist",
                        data: {
                            id: function () { return $("#Id").val(); },
                            buildName: function () { return $("#BuildName").val(); }
                        }
                    }
                }
            },
            messages: {
                BuildName: {
                    required: "请输入楼座名称",
                    maxlength: "长度不能超过50位",
                    remote: "该楼座名称已存在"
                }
            }
        });

        function OnSuccess(data) {
            if (data.Code == "OK") {
                window.location.href = "/Build/BuildList";
            }
            else {
                swal({
                    title: data.Msg,
                    type: "error",
                    text: ""
                });
            }
        }
        function OnFailure(err) {
            swal({
                title: "请求出现异常,新增失败",
                type: "error",
                text: ""
            });
        }
    </script>
}
